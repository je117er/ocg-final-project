// Code generated by sqlc. DO NOT EDIT.
// source: history.sql

package db

import (
	"context"
	"database/sql"
	"github.com/je117er/ocg-final-project/internal/models"
)

const getMedicalHistory = `-- name: GetMedicalHistory :one
SELECT id, code, description, condition_status, customer_id
FROM medical_condition
where customer_id = ? limit 1
`

func (q *Queries) GetMedicalHistory(ctx context.Context, customerID int32) (models.MedicalCondition, error) {
	row := q.db.QueryRowContext(ctx, getMedicalHistory, customerID)
	var i models.MedicalCondition
	err := row.Scan(
		&i.ID,
		&i.Code,
		&i.Description,
		&i.ConditionStatus,
		&i.CustomerID,
	)
	return i, err
}

const updateMedicalHistory = `-- name: UpdateMedicalHistory :exec
UPDATE medical_condition
set
    description = ?,
    condition_status = ?
where customer_id = ?
`

type UpdateMedicalHistoryParams struct {
	Description     sql.NullString
	ConditionStatus sql.NullBool
	CustomerID      int32
}

func (q *Queries) UpdateMedicalHistory(ctx context.Context, arg UpdateMedicalHistoryParams) error {
	_, err := q.db.ExecContext(ctx, updateMedicalHistory, arg.Description, arg.ConditionStatus, arg.CustomerID)
	return err
}
