// Code generated by sqlc. DO NOT EDIT.
// source: booking.sql

package db

import (
	"context"
	"database/sql"
)

const getBooking = `-- name: GetBooking :one
SELECT id, date_registered, total_bill, vaccine_name, lot_number
FROM booking
WHERE customer_id = ? limit 1
`

type GetBookingRow struct {
	ID             sql.NullInt32
	DateRegistered sql.NullTime
	TotalBill      sql.NullString
	VaccineName    sql.NullString
	LotNumber      sql.NullString
}

func (q *Queries) GetBooking(ctx context.Context, customerID int32) (GetBookingRow, error) {
	row := q.db.QueryRowContext(ctx, getBooking, customerID)
	var i GetBookingRow
	err := row.Scan(
		&i.ID,
		&i.DateRegistered,
		&i.TotalBill,
		&i.VaccineName,
		&i.LotNumber,
	)
	return i, err
}

const updateBooking = `-- name: UpdateBooking :exec
UPDATE booking
SET
    date_booked = ?,
    time_period = ?,
    discount_id = ?
WHERE customer_id = ?
`

type UpdateBookingParams struct {
	DateBooked sql.NullTime
	TimePeriod sql.NullInt32
	DiscountID int32
	CustomerID int32
}

func (q *Queries) UpdateBooking(ctx context.Context, arg UpdateBookingParams) error {
	_, err := q.db.ExecContext(ctx, updateBooking,
		arg.DateBooked,
		arg.TimePeriod,
		arg.DiscountID,
		arg.CustomerID,
	)
	return err
}
